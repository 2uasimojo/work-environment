#!/bin/bash
#
# Retrieves a cluster variable from locally cached files created
# by ~/bin/update-cluster-cache.
#
# This command is generally not called directly, but through one
# of the "oo" commands (oo_account, oo_environment, etc).
#
#   get-cluster-var CLUSTERID [VARNAME]
#
# The program can also be used as a silent validity test for a
# CLUSTERID by omitting the VARNAME argument, although this only
# really indicates whether a locally cached file exists for it.
#
# NOTE: Very early, very experimental v4 support.  This may be
#       reverted or drastically changed.
#

CLUSTER=$1
VARNAME=$2
if [[ -z $CLUSTER ]]
then
    echo "Usage: $0 <clusterid> [<varname>]" > /dev/stderr
    exit 1
fi

if [[ "${CLUSTER:0:3}" =~ ^v[34]: ]]
then
  VERSION=${CLUSTER:0:2}
  CLUSTER=${CLUSTER:3}
fi

V3_FILE="$HOME/.cache/sre/clusters/v3/$CLUSTER"
V4_FILE="$HOME/.cache/sre/clusters/v4/$CLUSTER"
if [[ "${VERSION:-v3}" == "v3" ]] && [[ -f $V3_FILE ]]
then
  if [[ -n $VARNAME ]]
  then
    cat $V3_FILE | jq ".$VARNAME" | tr -d '"'
  fi
elif [[ "${VERSION:-v4}" == "v4" ]] && [[ -f $V4_FILE ]]
then
  if [[ -n $VARNAME ]]
  then
    cat $V4_FILE | jq ".$VARNAME" | tr -d '"'
  fi
else
  echo "Unknown cluster '$CLUSTER'" > /dev/stderr
  exit 1
fi
