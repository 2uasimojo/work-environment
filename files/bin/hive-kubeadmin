#!/bin/bash
#
# Retrieves the Kubernetes configuration for the cluster's admin user.
#

set -euo pipefail

function get-hive-cluster-name {
  CLOUD_PROVIDER=$(ocm get /api/clusters_mgmt/v1/clusters/$1 | jq --raw-output '.cloud_provider.id')

  case $CLOUD_PROVIDER
  in
    aws)
      JSON_QUERY=".aws_account_operator_config.server"
      ;;
    gcp)
      JSON_QUERY=".gcp_account_operator_config.server"
      ;;
    *)
      echo "Unknown cloud provider: $CLOUD_PROVIDER" > /dev/stderr
      exit 1
  esac

  ocm get /api/clusters_mgmt/v1/clusters/$1/provision_shard | \
    jq --raw-output $JSON_QUERY | \
    awk '{ if (match($0, /^https:\/\/api\.([-a-z0-9]+)\./, groups)) print groups[1] }'
}

OCM_CLUSTERID=${1:-$OCM_CLUSTERID}
if [[ -z "$OCM_CLUSTERID" ]]
then
  echo "Usage: $0 <ocm-clusterid> [hive-cluster-name]" > /dev/stderr
  exit 1
fi
HIVE_CLUSTER_NAME=${2:-$(get-hive-cluster-name $OCM_CLUSTERID)}

case $(hostname)
in
  bastion-nasa-*.ops.openshift.com)
    case $HIVE_CLUSTER_NAME
    in
      # Hive clusters hosted on OSDv3
      hive-integration|hive-production|hive-stage)
        OC="ssh root@${HIVE_CLUSTER_NAME}-master -o StrictHostKeyChecking=no oc"
        ;;
      *)
        SOCKET_DIR=$XDG_RUNTIME_DIR/ssh
        mkdir --parents $SOCKET_DIR
        CONTROL_PATH="$SOCKET_DIR/%h.sock"
        HIVE_CLUSTER_ID=$(get-cluster-var $HIVE_CLUSTER_NAME id)
        ADDRESS=$(sshaddress $HIVE_CLUSTER_ID)
        PROXY_PORT=$(find-proxy-port $HIVE_CLUSTER_ID)
        trap "ssh -q -O exit -o ControlPath=$CONTROL_PATH $ADDRESS" EXIT
        ssh -4fq -D $PROXY_PORT -o ControlMaster=yes -o ControlPath=$CONTROL_PATH $ADDRESS true > /dev/null
        export HTTPS_PROXY=socks5://localhost:$PROXY_PORT
        OC="oc --config=$HOME/.config/sre/clusters/v4/$HIVE_CLUSTER_NAME"
        ;;
    esac

    HIVE_NAMESPACE=$($OC get clusterdeployment --all-namespaces --selector=api.openshift.com/id=$OCM_CLUSTERID --output json | jq --raw-output '.items[0].metadata.namespace')
    if [[ "$HIVE_NAMESPACE" == "null" ]]
    then
      echo "ClusterDeployment $OCM_CLUSTERID not found on $HIVE_CLUSTER_NAME" > /dev/stderr
      exit 1
    fi

    $OC get secret --namespace $HIVE_NAMESPACE --selector=hive.openshift.io/secret-type=kubeconfig --output json | jq --raw-output '.items[0].data.kubeconfig' | base64 --decode
    ;;
  *)
    # Defer to the bastion host, which can access production Hive clusters.
    ssh bastion-nasa-1.ops.openshift.com bin/$(basename $0) $OCM_CLUSTERID $HIVE_CLUSTER_NAME
    ;;
esac
